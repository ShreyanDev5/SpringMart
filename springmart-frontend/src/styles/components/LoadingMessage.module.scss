/* src/styles/components/LoadingMessage.module.scss */
@use '../index' as *;

.loadingMessage {
  background: $white;
  border-radius: $radius-lg;
  box-shadow: $shadow-md;
  border: 1px solid rgba($primary, 0.05);
  margin-bottom: $spacing-sm;
  overflow: hidden;
  animation: slideIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  max-width: 600px;
  margin-left: auto;
  margin-right: auto;
  
  @include respond-to(md) {
    margin-bottom: $spacing-md;
  }
  
  // More compact on mobile
  @include respond-to(sm) {
    max-width: 90%;
    margin-left: auto;
    margin-right: auto;
  }
  
  // Even more compact on extra small screens
  @include respond-to(xs) {
    max-width: 95%;
  }
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(-5px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.loadingContent {
  display: flex;
  align-items: center;
  padding: $spacing-xs $spacing-sm;
  gap: $spacing-xs;
  
  @include respond-to(md) {
    padding: $spacing-sm $spacing-md;
    gap: $spacing-sm;
  }
  
  // More compact on mobile
  @include respond-to(sm) {
    padding: $spacing-2xs $spacing-xs;
    gap: $spacing-2xs;
  }
}

.iconContainer {
  flex-shrink: 0;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba($primary, 0.1);
  border-radius: 50%;
  animation: pulse 2s infinite;
  
  // Smaller on mobile
  @include respond-to(sm) {
    width: 32px;
    height: 32px;
  }
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba($primary, 0.15);
  }
  70% {
    box-shadow: 0 0 0 5px rgba($primary, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba($primary, 0);
  }
}

.loadingIcon {
  width: 20px;
  height: 20px;
  color: $primary;
  animation: spin 2s linear infinite;
  
  // Smaller on mobile
  @include respond-to(sm) {
    width: 16px;
    height: 16px;
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.textContainer {
  flex: 1;
  min-width: 0;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: $spacing-xs;
  flex-wrap: wrap;
  
  @include respond-to(sm) {
    flex-wrap: nowrap;
  }
  
  // More compact on mobile
  @include respond-to(xs) {
    gap: $spacing-2xs;
  }
  
  // Ensure text doesn't overflow on extra small screens
  @media (max-width: 360px) {
    min-width: 0;
    flex-direction: column;
    align-items: flex-start;
  }
}

.message {
  font-weight: $font-weight-semibold;
  color: $dark;
  margin: 0;
  font-size: 1.1rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  
  @include respond-to(md) {
    font-size: 1.2rem;
  }
  
  // Smaller on mobile for compact appearance
  @include respond-to(sm) {
    font-size: 1rem;
  }
  
  @include respond-to(xs) {
    font-size: 0.9rem;
  }
  
  // Even smaller on very small screens
  @media (max-width: 360px) {
    font-size: 0.8rem;
    white-space: normal;
    line-height: 1.2;
  }
}

.timeInfo {
  font-size: 0.8rem;
  color: $dark-gray;
  margin: 0;
  font-weight: $font-weight-normal;
  white-space: nowrap;
  
  @include respond-to(md) {
    font-size: 0.85rem;
  }
  
  // Smaller on mobile for compact appearance
  @include respond-to(sm) {
    font-size: 0.75rem;
  }
  
  @include respond-to(xs) {
    font-size: 0.7rem;
  }
  
  // Even smaller on very small screens
  @media (max-width: 360px) {
    font-size: 0.65rem;
  }
}

.renderInfo {
  display: flex;
  gap: $spacing-sm;
  margin: 0 $spacing-sm $spacing-sm;
  padding: $spacing-sm;
  background: rgba($accent, 0.03);
  border-radius: $radius;
  border-left: 2px solid $accent;
  width: calc(100% - #{$spacing-md});
  
  @include respond-to(md) {
    margin: 0 $spacing-md $spacing-md;
    width: calc(100% - #{$spacing-lg});
  }
  
  // More compact on mobile
  @include respond-to(sm) {
    gap: $spacing-xs;
    margin: 0 $spacing-xs $spacing-xs;
    padding: $spacing-xs;
    width: calc(100% - #{$spacing-sm});
  }
  
  @include respond-to(xs) {
    gap: $spacing-2xs;
    margin: 0 $spacing-2xs $spacing-2xs;
    padding: $spacing-2xs;
    width: calc(100% - #{$spacing-xs});
  }
}

.infoIcon {
  flex-shrink: 0;
  color: $accent;
  margin-top: $spacing-3xs;
  
  svg {
    width: 14px;
    height: 14px;
  }
  
  @include respond-to(md) {
    svg {
      width: 16px;
      height: 16px;
    }
  }
  
  // Smaller on mobile
  @include respond-to(sm) {
    margin-top: 0;
    
    svg {
      width: 12px;
      height: 12px;
    }
  }
}

.infoText {
  p {
    margin: 0 0 $spacing-3xs 0;
    font-size: 0.7rem;
    line-height: 1.4;
    color: $dark-gray;
    
    &:last-child {
      margin-bottom: 0;
    }
    
    &:first-child {
      font-weight: $font-weight-bold;
      color: $dark;
    }
  }
  
  @include respond-to(md) {
    p {
      font-size: 0.75rem;
    }
  }
  
  // More compact on mobile
  @include respond-to(sm) {
    p {
      font-size: 0.65rem;
      line-height: 1.3;
      margin-bottom: $spacing-3xs;
    }
  }
  
  @include respond-to(xs) {
    p {
      font-size: 0.6rem;
      line-height: 1.2;
      margin-bottom: $spacing-3xs;
    }
  }
}

.actions {
  display: flex;
  gap: $spacing-2xs;
  flex-shrink: 0;
  align-items: center;
  
  // More compact on mobile
  @include respond-to(sm) {
    gap: $spacing-3xs;
  }
}

.retryButton,
.dismissButton {
  width: 28px;
  height: 28px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: $radius-full;
  border: none;
  background: transparent;
  cursor: pointer;
  transition: $transition;
  color: $dark-gray;
  
  &:hover {
    background: rgba($dark-gray, 0.1);
    color: $dark;
  }
  
  &:active {
    transform: scale(0.92);
  }
  
  svg {
    width: 14px;
    height: 14px;
  }
  
  @include respond-to(md) {
    width: 30px;
    height: 30px;
    
    svg {
      width: 16px;
      height: 16px;
    }
  }
  
  // Smaller on mobile
  @include respond-to(sm) {
    width: 24px;
    height: 24px;
    
    svg {
      width: 12px;
      height: 12px;
    }
  }
  
  @include respond-to(xs) {
    width: 20px;
    height: 20px;
    
    svg {
      width: 10px;
      height: 10px;
    }
  }
}

.retryButton {
  &:hover {
    background: rgba($primary, 0.1);
    color: $primary;
  }
}