/* src/styles/components/AddProduct.module.scss */
@use '../index' as *;

.addProductContainer {
  max-width: 800px;
  margin: $spacing-3xl auto;
  padding: $spacing-xl;
  border-radius: $radius-2xl;
  background-color: $white;
  box-shadow: $shadow-lg;
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: $primary-gradient;
  }
  
  @include respond-to(md) {
    margin: $spacing-xl;
    padding: $spacing-lg;
    border-radius: $radius-xl;
  }
  
  @include respond-to(sm) {
    margin: $spacing-lg;
    padding: $spacing-md;
    border-radius: $radius-lg;
  }
  
  h2 {
    text-align: center;
    color: $dark;
    margin-bottom: $spacing-xl;
    font-size: 2.5rem;
    font-weight: 800;
    letter-spacing: -0.03em;
    position: relative;
    
    &::after {
      content: '';
      position: absolute;
      bottom: -12px;
      left: 50%;
      transform: translateX(-50%);
      width: 70px;
      height: 4px;
      background: $primary-gradient;
      border-radius: 2px;
    }
    
    @include respond-to(sm) {
      font-size: 2rem;
      margin-bottom: $spacing-lg;
    }
  }
}

.productForm {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: $spacing-lg;
  
  @include respond-to(md) {
    grid-template-columns: 1fr;
    gap: $spacing-md;
  }
  
  @include respond-to(sm) {
    gap: $spacing-sm;
  }
}

.formGroup {
  margin-bottom: $spacing-md;
  
  // Make description and image upload full width
  &:nth-child(3),
  &:nth-child(11) {
    grid-column: 1 / -1;
  }
  
  // Special styling for checkbox container
  &:has(.styledCheckbox) {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    margin-bottom: $spacing-lg;
    
    // Style the label text
    label {
      margin-bottom: $spacing-xs;
      font-weight: 600;
      color: $dark-gray;
      font-size: 0.95rem;
      display: block;
    }
  }
  
  label {
    display: block;
    margin-bottom: $spacing-xs;
    font-weight: 500;
    color: $dark-gray;
    font-size: 0.95rem;
    position: relative;
    
    &::after {
      content: '';
      position: absolute;
      bottom: -4px;
      left: 0;
      width: 20px;
      height: 2px;
      background: $primary;
      border-radius: 1px;
      opacity: 0;
      transition: opacity 0.3s ease;
    }
    
    .formGroup:focus-within &::after {
      opacity: 1;
    }
  }
}

.styledInput,
.styledTextarea,
.styledSelect,
.styledFileUpload {
  width: 100%;
  padding: 1rem 1.25rem;
  border: 2px solid $light-gray;
  border-radius: $radius-lg;
  font-size: 1rem;
  background-color: $white;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  font-family: inherit;
  position: relative;
  
  &:hover {
    border-color: $gray;
  }
  
  &:focus {
    border-color: $primary;
    outline: none;
    box-shadow: 0 0 0 4px rgba($primary, 0.15);
  }
  
  &:disabled {
    background-color: $lighter-gray;
    cursor: not-allowed;
  }
  
  @include respond-to(sm) {
    padding: 0.85rem 1rem;
    font-size: 0.95rem;
  }
  
  // Hide number input arrows for all browsers
  &[type="number"]::-webkit-inner-spin-button,
  &[type="number"]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  &[type="number"] {
    -moz-appearance: textfield; /* Firefox */
    appearance: textfield;
  }
}

.styledTextarea {
  min-height: 160px;
  resize: vertical;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  
  &:focus {
    min-height: 180px;
  }
}

.styledSelect {
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%236b7280' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 1rem center;
  background-size: 1.25rem;
  padding-right: 3rem;
  
  &:focus {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='%234361ee' stroke='%234361ee' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
  }
}

.styledFileUpload {
  padding: 1rem 1.25rem;
  background-color: $lighter-gray;
  cursor: pointer;
  border: 2px dashed $light-gray;
  border-radius: $radius-lg;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    transform: translateX(-100%);
    transition: transform 0.6s ease;
    z-index: -1;
  }
  
  &:hover {
    border-color: $primary;
    background-color: rgba($primary, 0.05);
    
    &::before {
      transform: translateX(100%);
    }
  }
  
  &:focus {
    border-color: $primary;
    outline: none;
    box-shadow: 0 0 0 4px rgba($primary, 0.15);
  }
  
  &::-webkit-file-upload-button {
    padding: 0.6rem 1.25rem;
    background: $primary-gradient;
    color: white;
    border: none;
    border-radius: $radius;
    cursor: pointer;
    transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
    font-weight: 600;
    margin-right: 1.25rem;
    box-shadow: $shadow-sm;
    
    &:hover {
      background: linear-gradient(135deg, lighten($primary, 5%) 0%, lighten($primary-dark, 5%) 100%);
      transform: translateY(-2px);
      box-shadow: $shadow;
    }
    
    &:active {
      transform: translateY(0);
      box-shadow: $shadow-sm;
      transition-duration: 0.1s;
    }
  }
}

.styledButton {
  grid-column: 1 / -1;
  padding: 1.25rem;
  background: $primary-gradient;
  color: white;
  border: none;
  border-radius: $radius-lg;
  font-size: 1.1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  margin-top: $spacing-xl;
  letter-spacing: 0.01em;
  position: relative;
  overflow: hidden;
  z-index: 1;
  box-shadow: $shadow;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    transform: translateX(-100%);
    transition: transform 0.6s ease;
    z-index: -1;
  }
  
  &:hover {
    transform: translateY(-3px);
    box-shadow: $shadow-lg;
    
    &::before {
      transform: translateX(100%);
    }
  }
  
  &:active {
    transform: translateY(0);
    box-shadow: $shadow;
    transition-duration: 0.1s;
  }
  
  &:disabled {
    background: $light-gray;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }
  
  @include respond-to(sm) {
    padding: 1.1rem;
    font-size: 1rem;
    margin-top: $spacing-lg;
  }
}

.styledCheckbox {
  display: flex;
  align-items: center;
  gap: 0.8rem;
  font-size: 1rem;
  cursor: pointer;
  padding: 0.75rem 0;
  position: relative;
  
  input[type="checkbox"] {
    width: 1.5rem;
    height: 1.5rem;
    cursor: pointer;
    accent-color: $primary;
    margin: 0;
    border-radius: $radius-sm;
    position: relative;
    
    &:checked::after {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 0.75rem;
      height: 0.75rem;
      background: $primary;
      border-radius: $radius-xs;
    }
  }
  
  span {
    color: $dark-gray;
    font-weight: 500;
  }
  
  &:hover {
    input[type="checkbox"] {
      transform: scale(1.05);
    }
    
    span {
      color: $dark;
    }
  }
}

.statusMessage {
  grid-column: 1 / -1;
  margin-top: $spacing-lg;
  padding: $spacing-md $spacing-lg;
  border-radius: $radius-lg;
  font-weight: 500;
  text-align: center;
  position: relative;
  overflow: hidden;
  border: 1px solid transparent;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
  }
  
  &.success {
    background-color: rgba($success, 0.1);
    color: $success;
    border-color: rgba($success, 0.2);
    
    &::before {
      background: linear-gradient(90deg, $success 0%, lighten($success, 10%) 100%);
    }
  }
  
  &.error {
    background-color: rgba($error, 0.1);
    color: $error;
    border-color: rgba($error, 0.2);
    
    &::before {
      background: linear-gradient(90deg, $error 0%, lighten($error, 10%) 100%);
    }
  }
}

// Add loading state styles
.loading {
  opacity: 0.7;
  pointer-events: none;
  
  .styledButton {
    position: relative;
    
    &::after {
      content: '';
      position: absolute;
      width: 1.5rem;
      height: 1.5rem;
      border: 3px solid white;
      border-top-color: transparent;
      border-radius: 50%;
      animation: spin 0.8s linear infinite;
      right: 1.5rem;
      top: 50%;
      transform: translateY(-50%);
    }
  }
}

@keyframes spin {
  to {
    transform: translateY(-50%) rotate(360deg);
  }
}

// Add validation styles
.invalid {
  border-color: $error !important;
  
  &:focus {
    box-shadow: 0 0 0 4px rgba($error, 0.15) !important;
  }
}

.validationMessage {
  color: $error;
  font-size: 0.85rem;
  margin-top: 0.4rem;
  display: block;
  font-weight: 500;
  position: relative;
  padding-left: 1.25rem;
  
  &::before {
    content: '!';
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 16px;
    height: 16px;
    background: $error;
    color: white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.7rem;
    font-weight: 700;
  }
}

// Responsive adjustments
@include respond-to(md) {
  .formGroup {
    margin-bottom: $spacing-sm;
  }
  
  .styledButton {
    margin-top: $spacing-lg;
  }
}

@include respond-to(sm) {
  .addProductContainer {
    margin: $spacing-lg;
    padding: $spacing-md;
  }
  
  .productForm {
    gap: $spacing-sm;
  }
  
  .formGroup {
    margin-bottom: $spacing-sm;
  }
  
  .styledButton {
    margin-top: $spacing-lg;
    padding: 1rem;
  }
  
  .validationMessage {
    font-size: 0.8rem;
  }
  
  .styledInput,
  .styledTextarea,
  .styledSelect,
  .styledFileUpload {
    padding: 0.85rem 1rem;
  }
  
  .styledFileUpload {
    &::-webkit-file-upload-button {
      padding: 0.5rem 1rem;
      margin-right: 1rem;
    }
  }
}
